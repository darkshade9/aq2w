# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/tools/q2wmap/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/quake2world
pkgincludedir = $(includedir)/quake2world
pkglibdir = $(libdir)/quake2world
pkglibexecdir = $(libexecdir)/quake2world
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = q2wmap$(EXEEXT)
subdir = src/tools/q2wmap
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_q2wmap_OBJECTS = q2wmap-brushbsp.$(OBJEXT) q2wmap-bspfile.$(OBJEXT) \
	q2wmap-csg.$(OBJEXT) q2wmap-faces.$(OBJEXT) \
	q2wmap-flow.$(OBJEXT) q2wmap-leakfile.$(OBJEXT) \
	q2wmap-lightmap.$(OBJEXT) q2wmap-main.$(OBJEXT) \
	q2wmap-map.$(OBJEXT) q2wmap-patches.$(OBJEXT) \
	q2wmap-polylib.$(OBJEXT) q2wmap-portals.$(OBJEXT) \
	q2wmap-prtfile.$(OBJEXT) q2wmap-qbsp.$(OBJEXT) \
	q2wmap-qmat.$(OBJEXT) q2wmap-qpak.$(OBJEXT) \
	q2wmap-qlight.$(OBJEXT) q2wmap-qvis.$(OBJEXT) \
	q2wmap-scriplib.$(OBJEXT) q2wmap-textures.$(OBJEXT) \
	q2wmap-threads.$(OBJEXT) q2wmap-tree.$(OBJEXT) \
	q2wmap-writebsp.$(OBJEXT)
q2wmap_OBJECTS = $(am_q2wmap_OBJECTS)
q2wmap_DEPENDENCIES = ../../libcmodel.la ../../libimages.la \
	../../libthreads.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
q2wmap_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(q2wmap_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(q2wmap_SOURCES)
DIST_SOURCES = $(q2wmap_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /usr/src/aq2w/missing --run aclocal-1.11
AMTAR = ${SHELL} /usr/src/aq2w/missing --run tar
AM_DEFAULT_VERBOSITY = 1
ANTTWEAKBAR_LIBS = 
AR = ar
AUTOCONF = ${SHELL} /usr/src/aq2w/missing --run autoconf
AUTOHEADER = ${SHELL} /usr/src/aq2w/missing --run autoheader
AUTOMAKE = ${SHELL} /usr/src/aq2w/missing --run automake-1.11
AWK = gawk
BASE_CFLAGS = -std=c99 -O2 -pedantic -W -Wall
BASE_LDFLAGS = 
BASE_LIBS = -ldl
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = -std=c99  
CURL_CFLAGS = 
CURL_CONFIG = 
CURL_LIBS = 
CURSES_CFLAGS =  -I/include
CURSES_LDFLAGS =  -L/lib
CURSES_LIBS = 
CYGPATH_W = echo
DEBUG_CFLAGS = -O2
DEBUG_LIBS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GAME_MODULES = default
GREP = /bin/grep
HOST_CFLAGS = 
HOST_DEBUG_CFLAGS = 
HOST_DEBUG_LIBS = -rdynamic
HOST_LIBS = -ldl
HOST_NAME = LINUX
HOST_OPENGL_CFLAGS = 
HOST_OPENGL_LIBS = 
HOST_PROFILE_CFLAGS = 
HOST_PROFILE_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JPEG_LIBS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =  
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /usr/src/aq2w/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MYSQL_CFLAGS = 
MYSQL_CONFIG = 
MYSQL_LIBS = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENGL_CFLAGS = 
OPENGL_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = quake2world
PACKAGE_BUGREPORT = quake2@jdolan.dyndns.org
PACKAGE_NAME = quake2world
PACKAGE_STRING = quake2world 0.1.0
PACKAGE_TARNAME = quake2world
PACKAGE_VERSION = 0.1.0
PATH_SEPARATOR = :
PKGDATADIR = /usr/local/share/quake2world
PROFILE_CFLAGS = 
PROFILE_LIBS = 
PROGRAM = 
RANLIB = ranlib
SDL_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -lSDL -lpthread
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SO_CFLAGS =  -fPIC -DPIC
STRIP = strip
TOOL_DIRS = 
VERSION = 0.1.0
WARN_CFLAGS = -pedantic -W -Wall
WINDRES = 
abs_builddir = /usr/src/aq2w/src/tools/q2wmap
abs_srcdir = /usr/src/aq2w/src/tools/q2wmap
abs_top_builddir = /usr/src/aq2w
abs_top_srcdir = /usr/src/aq2w
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr/local
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /usr/src/aq2w/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
noinst_HEADERS = \
	bspfile.h \
	polylib.h \
	q2wmap.h \
	qbsp.h \
	qlight.h \
	qvis.h \
	scriplib.h

q2wmap_SOURCES = \
	brushbsp.c \
	bspfile.c \
	csg.c \
	faces.c \
	flow.c \
	leakfile.c \
	lightmap.c \
	main.c \
	map.c \
	patches.c \
	polylib.c \
	portals.c \
	prtfile.c \
	qbsp.c \
	qmat.c \
	qpak.c \
	qlight.c \
	qvis.c \
	scriplib.c \
	textures.c \
	threads.c \
	tree.c \
	writebsp.c

q2wmap_CFLAGS = \
	-I../.. \
	-pipe \
	-std=c99 -O2 -pedantic -W -Wall \
	-I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT

q2wmap_LDADD = \
	../../libcmodel.la \
	../../libimages.la \
	../../libthreads.la \
	-ldl \
	 \
	 \
	-lSDL -lpthread \
	-lm -lz

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/tools/q2wmap/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/tools/q2wmap/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
q2wmap$(EXEEXT): $(q2wmap_OBJECTS) $(q2wmap_DEPENDENCIES) 
	@rm -f q2wmap$(EXEEXT)
	$(AM_V_CCLD)$(q2wmap_LINK) $(q2wmap_OBJECTS) $(q2wmap_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/q2wmap-brushbsp.Po
include ./$(DEPDIR)/q2wmap-bspfile.Po
include ./$(DEPDIR)/q2wmap-csg.Po
include ./$(DEPDIR)/q2wmap-faces.Po
include ./$(DEPDIR)/q2wmap-flow.Po
include ./$(DEPDIR)/q2wmap-leakfile.Po
include ./$(DEPDIR)/q2wmap-lightmap.Po
include ./$(DEPDIR)/q2wmap-main.Po
include ./$(DEPDIR)/q2wmap-map.Po
include ./$(DEPDIR)/q2wmap-patches.Po
include ./$(DEPDIR)/q2wmap-polylib.Po
include ./$(DEPDIR)/q2wmap-portals.Po
include ./$(DEPDIR)/q2wmap-prtfile.Po
include ./$(DEPDIR)/q2wmap-qbsp.Po
include ./$(DEPDIR)/q2wmap-qlight.Po
include ./$(DEPDIR)/q2wmap-qmat.Po
include ./$(DEPDIR)/q2wmap-qpak.Po
include ./$(DEPDIR)/q2wmap-qvis.Po
include ./$(DEPDIR)/q2wmap-scriplib.Po
include ./$(DEPDIR)/q2wmap-textures.Po
include ./$(DEPDIR)/q2wmap-threads.Po
include ./$(DEPDIR)/q2wmap-tree.Po
include ./$(DEPDIR)/q2wmap-writebsp.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

q2wmap-brushbsp.o: brushbsp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-brushbsp.o -MD -MP -MF $(DEPDIR)/q2wmap-brushbsp.Tpo -c -o q2wmap-brushbsp.o `test -f 'brushbsp.c' || echo '$(srcdir)/'`brushbsp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-brushbsp.Tpo $(DEPDIR)/q2wmap-brushbsp.Po
#	$(AM_V_CC) \
#	source='brushbsp.c' object='q2wmap-brushbsp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-brushbsp.o `test -f 'brushbsp.c' || echo '$(srcdir)/'`brushbsp.c

q2wmap-brushbsp.obj: brushbsp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-brushbsp.obj -MD -MP -MF $(DEPDIR)/q2wmap-brushbsp.Tpo -c -o q2wmap-brushbsp.obj `if test -f 'brushbsp.c'; then $(CYGPATH_W) 'brushbsp.c'; else $(CYGPATH_W) '$(srcdir)/brushbsp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-brushbsp.Tpo $(DEPDIR)/q2wmap-brushbsp.Po
#	$(AM_V_CC) \
#	source='brushbsp.c' object='q2wmap-brushbsp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-brushbsp.obj `if test -f 'brushbsp.c'; then $(CYGPATH_W) 'brushbsp.c'; else $(CYGPATH_W) '$(srcdir)/brushbsp.c'; fi`

q2wmap-bspfile.o: bspfile.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-bspfile.o -MD -MP -MF $(DEPDIR)/q2wmap-bspfile.Tpo -c -o q2wmap-bspfile.o `test -f 'bspfile.c' || echo '$(srcdir)/'`bspfile.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-bspfile.Tpo $(DEPDIR)/q2wmap-bspfile.Po
#	$(AM_V_CC) \
#	source='bspfile.c' object='q2wmap-bspfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-bspfile.o `test -f 'bspfile.c' || echo '$(srcdir)/'`bspfile.c

q2wmap-bspfile.obj: bspfile.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-bspfile.obj -MD -MP -MF $(DEPDIR)/q2wmap-bspfile.Tpo -c -o q2wmap-bspfile.obj `if test -f 'bspfile.c'; then $(CYGPATH_W) 'bspfile.c'; else $(CYGPATH_W) '$(srcdir)/bspfile.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-bspfile.Tpo $(DEPDIR)/q2wmap-bspfile.Po
#	$(AM_V_CC) \
#	source='bspfile.c' object='q2wmap-bspfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-bspfile.obj `if test -f 'bspfile.c'; then $(CYGPATH_W) 'bspfile.c'; else $(CYGPATH_W) '$(srcdir)/bspfile.c'; fi`

q2wmap-csg.o: csg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-csg.o -MD -MP -MF $(DEPDIR)/q2wmap-csg.Tpo -c -o q2wmap-csg.o `test -f 'csg.c' || echo '$(srcdir)/'`csg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-csg.Tpo $(DEPDIR)/q2wmap-csg.Po
#	$(AM_V_CC) \
#	source='csg.c' object='q2wmap-csg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-csg.o `test -f 'csg.c' || echo '$(srcdir)/'`csg.c

q2wmap-csg.obj: csg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-csg.obj -MD -MP -MF $(DEPDIR)/q2wmap-csg.Tpo -c -o q2wmap-csg.obj `if test -f 'csg.c'; then $(CYGPATH_W) 'csg.c'; else $(CYGPATH_W) '$(srcdir)/csg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-csg.Tpo $(DEPDIR)/q2wmap-csg.Po
#	$(AM_V_CC) \
#	source='csg.c' object='q2wmap-csg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-csg.obj `if test -f 'csg.c'; then $(CYGPATH_W) 'csg.c'; else $(CYGPATH_W) '$(srcdir)/csg.c'; fi`

q2wmap-faces.o: faces.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-faces.o -MD -MP -MF $(DEPDIR)/q2wmap-faces.Tpo -c -o q2wmap-faces.o `test -f 'faces.c' || echo '$(srcdir)/'`faces.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-faces.Tpo $(DEPDIR)/q2wmap-faces.Po
#	$(AM_V_CC) \
#	source='faces.c' object='q2wmap-faces.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-faces.o `test -f 'faces.c' || echo '$(srcdir)/'`faces.c

q2wmap-faces.obj: faces.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-faces.obj -MD -MP -MF $(DEPDIR)/q2wmap-faces.Tpo -c -o q2wmap-faces.obj `if test -f 'faces.c'; then $(CYGPATH_W) 'faces.c'; else $(CYGPATH_W) '$(srcdir)/faces.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-faces.Tpo $(DEPDIR)/q2wmap-faces.Po
#	$(AM_V_CC) \
#	source='faces.c' object='q2wmap-faces.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-faces.obj `if test -f 'faces.c'; then $(CYGPATH_W) 'faces.c'; else $(CYGPATH_W) '$(srcdir)/faces.c'; fi`

q2wmap-flow.o: flow.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-flow.o -MD -MP -MF $(DEPDIR)/q2wmap-flow.Tpo -c -o q2wmap-flow.o `test -f 'flow.c' || echo '$(srcdir)/'`flow.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-flow.Tpo $(DEPDIR)/q2wmap-flow.Po
#	$(AM_V_CC) \
#	source='flow.c' object='q2wmap-flow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-flow.o `test -f 'flow.c' || echo '$(srcdir)/'`flow.c

q2wmap-flow.obj: flow.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-flow.obj -MD -MP -MF $(DEPDIR)/q2wmap-flow.Tpo -c -o q2wmap-flow.obj `if test -f 'flow.c'; then $(CYGPATH_W) 'flow.c'; else $(CYGPATH_W) '$(srcdir)/flow.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-flow.Tpo $(DEPDIR)/q2wmap-flow.Po
#	$(AM_V_CC) \
#	source='flow.c' object='q2wmap-flow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-flow.obj `if test -f 'flow.c'; then $(CYGPATH_W) 'flow.c'; else $(CYGPATH_W) '$(srcdir)/flow.c'; fi`

q2wmap-leakfile.o: leakfile.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-leakfile.o -MD -MP -MF $(DEPDIR)/q2wmap-leakfile.Tpo -c -o q2wmap-leakfile.o `test -f 'leakfile.c' || echo '$(srcdir)/'`leakfile.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-leakfile.Tpo $(DEPDIR)/q2wmap-leakfile.Po
#	$(AM_V_CC) \
#	source='leakfile.c' object='q2wmap-leakfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-leakfile.o `test -f 'leakfile.c' || echo '$(srcdir)/'`leakfile.c

q2wmap-leakfile.obj: leakfile.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-leakfile.obj -MD -MP -MF $(DEPDIR)/q2wmap-leakfile.Tpo -c -o q2wmap-leakfile.obj `if test -f 'leakfile.c'; then $(CYGPATH_W) 'leakfile.c'; else $(CYGPATH_W) '$(srcdir)/leakfile.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-leakfile.Tpo $(DEPDIR)/q2wmap-leakfile.Po
#	$(AM_V_CC) \
#	source='leakfile.c' object='q2wmap-leakfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-leakfile.obj `if test -f 'leakfile.c'; then $(CYGPATH_W) 'leakfile.c'; else $(CYGPATH_W) '$(srcdir)/leakfile.c'; fi`

q2wmap-lightmap.o: lightmap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-lightmap.o -MD -MP -MF $(DEPDIR)/q2wmap-lightmap.Tpo -c -o q2wmap-lightmap.o `test -f 'lightmap.c' || echo '$(srcdir)/'`lightmap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-lightmap.Tpo $(DEPDIR)/q2wmap-lightmap.Po
#	$(AM_V_CC) \
#	source='lightmap.c' object='q2wmap-lightmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-lightmap.o `test -f 'lightmap.c' || echo '$(srcdir)/'`lightmap.c

q2wmap-lightmap.obj: lightmap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-lightmap.obj -MD -MP -MF $(DEPDIR)/q2wmap-lightmap.Tpo -c -o q2wmap-lightmap.obj `if test -f 'lightmap.c'; then $(CYGPATH_W) 'lightmap.c'; else $(CYGPATH_W) '$(srcdir)/lightmap.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-lightmap.Tpo $(DEPDIR)/q2wmap-lightmap.Po
#	$(AM_V_CC) \
#	source='lightmap.c' object='q2wmap-lightmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-lightmap.obj `if test -f 'lightmap.c'; then $(CYGPATH_W) 'lightmap.c'; else $(CYGPATH_W) '$(srcdir)/lightmap.c'; fi`

q2wmap-main.o: main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-main.o -MD -MP -MF $(DEPDIR)/q2wmap-main.Tpo -c -o q2wmap-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-main.Tpo $(DEPDIR)/q2wmap-main.Po
#	$(AM_V_CC) \
#	source='main.c' object='q2wmap-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

q2wmap-main.obj: main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-main.obj -MD -MP -MF $(DEPDIR)/q2wmap-main.Tpo -c -o q2wmap-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-main.Tpo $(DEPDIR)/q2wmap-main.Po
#	$(AM_V_CC) \
#	source='main.c' object='q2wmap-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

q2wmap-map.o: map.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-map.o -MD -MP -MF $(DEPDIR)/q2wmap-map.Tpo -c -o q2wmap-map.o `test -f 'map.c' || echo '$(srcdir)/'`map.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-map.Tpo $(DEPDIR)/q2wmap-map.Po
#	$(AM_V_CC) \
#	source='map.c' object='q2wmap-map.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-map.o `test -f 'map.c' || echo '$(srcdir)/'`map.c

q2wmap-map.obj: map.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-map.obj -MD -MP -MF $(DEPDIR)/q2wmap-map.Tpo -c -o q2wmap-map.obj `if test -f 'map.c'; then $(CYGPATH_W) 'map.c'; else $(CYGPATH_W) '$(srcdir)/map.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-map.Tpo $(DEPDIR)/q2wmap-map.Po
#	$(AM_V_CC) \
#	source='map.c' object='q2wmap-map.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-map.obj `if test -f 'map.c'; then $(CYGPATH_W) 'map.c'; else $(CYGPATH_W) '$(srcdir)/map.c'; fi`

q2wmap-patches.o: patches.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-patches.o -MD -MP -MF $(DEPDIR)/q2wmap-patches.Tpo -c -o q2wmap-patches.o `test -f 'patches.c' || echo '$(srcdir)/'`patches.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-patches.Tpo $(DEPDIR)/q2wmap-patches.Po
#	$(AM_V_CC) \
#	source='patches.c' object='q2wmap-patches.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-patches.o `test -f 'patches.c' || echo '$(srcdir)/'`patches.c

q2wmap-patches.obj: patches.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-patches.obj -MD -MP -MF $(DEPDIR)/q2wmap-patches.Tpo -c -o q2wmap-patches.obj `if test -f 'patches.c'; then $(CYGPATH_W) 'patches.c'; else $(CYGPATH_W) '$(srcdir)/patches.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-patches.Tpo $(DEPDIR)/q2wmap-patches.Po
#	$(AM_V_CC) \
#	source='patches.c' object='q2wmap-patches.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-patches.obj `if test -f 'patches.c'; then $(CYGPATH_W) 'patches.c'; else $(CYGPATH_W) '$(srcdir)/patches.c'; fi`

q2wmap-polylib.o: polylib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-polylib.o -MD -MP -MF $(DEPDIR)/q2wmap-polylib.Tpo -c -o q2wmap-polylib.o `test -f 'polylib.c' || echo '$(srcdir)/'`polylib.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-polylib.Tpo $(DEPDIR)/q2wmap-polylib.Po
#	$(AM_V_CC) \
#	source='polylib.c' object='q2wmap-polylib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-polylib.o `test -f 'polylib.c' || echo '$(srcdir)/'`polylib.c

q2wmap-polylib.obj: polylib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-polylib.obj -MD -MP -MF $(DEPDIR)/q2wmap-polylib.Tpo -c -o q2wmap-polylib.obj `if test -f 'polylib.c'; then $(CYGPATH_W) 'polylib.c'; else $(CYGPATH_W) '$(srcdir)/polylib.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-polylib.Tpo $(DEPDIR)/q2wmap-polylib.Po
#	$(AM_V_CC) \
#	source='polylib.c' object='q2wmap-polylib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-polylib.obj `if test -f 'polylib.c'; then $(CYGPATH_W) 'polylib.c'; else $(CYGPATH_W) '$(srcdir)/polylib.c'; fi`

q2wmap-portals.o: portals.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-portals.o -MD -MP -MF $(DEPDIR)/q2wmap-portals.Tpo -c -o q2wmap-portals.o `test -f 'portals.c' || echo '$(srcdir)/'`portals.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-portals.Tpo $(DEPDIR)/q2wmap-portals.Po
#	$(AM_V_CC) \
#	source='portals.c' object='q2wmap-portals.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-portals.o `test -f 'portals.c' || echo '$(srcdir)/'`portals.c

q2wmap-portals.obj: portals.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-portals.obj -MD -MP -MF $(DEPDIR)/q2wmap-portals.Tpo -c -o q2wmap-portals.obj `if test -f 'portals.c'; then $(CYGPATH_W) 'portals.c'; else $(CYGPATH_W) '$(srcdir)/portals.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-portals.Tpo $(DEPDIR)/q2wmap-portals.Po
#	$(AM_V_CC) \
#	source='portals.c' object='q2wmap-portals.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-portals.obj `if test -f 'portals.c'; then $(CYGPATH_W) 'portals.c'; else $(CYGPATH_W) '$(srcdir)/portals.c'; fi`

q2wmap-prtfile.o: prtfile.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-prtfile.o -MD -MP -MF $(DEPDIR)/q2wmap-prtfile.Tpo -c -o q2wmap-prtfile.o `test -f 'prtfile.c' || echo '$(srcdir)/'`prtfile.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-prtfile.Tpo $(DEPDIR)/q2wmap-prtfile.Po
#	$(AM_V_CC) \
#	source='prtfile.c' object='q2wmap-prtfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-prtfile.o `test -f 'prtfile.c' || echo '$(srcdir)/'`prtfile.c

q2wmap-prtfile.obj: prtfile.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-prtfile.obj -MD -MP -MF $(DEPDIR)/q2wmap-prtfile.Tpo -c -o q2wmap-prtfile.obj `if test -f 'prtfile.c'; then $(CYGPATH_W) 'prtfile.c'; else $(CYGPATH_W) '$(srcdir)/prtfile.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-prtfile.Tpo $(DEPDIR)/q2wmap-prtfile.Po
#	$(AM_V_CC) \
#	source='prtfile.c' object='q2wmap-prtfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-prtfile.obj `if test -f 'prtfile.c'; then $(CYGPATH_W) 'prtfile.c'; else $(CYGPATH_W) '$(srcdir)/prtfile.c'; fi`

q2wmap-qbsp.o: qbsp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-qbsp.o -MD -MP -MF $(DEPDIR)/q2wmap-qbsp.Tpo -c -o q2wmap-qbsp.o `test -f 'qbsp.c' || echo '$(srcdir)/'`qbsp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-qbsp.Tpo $(DEPDIR)/q2wmap-qbsp.Po
#	$(AM_V_CC) \
#	source='qbsp.c' object='q2wmap-qbsp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-qbsp.o `test -f 'qbsp.c' || echo '$(srcdir)/'`qbsp.c

q2wmap-qbsp.obj: qbsp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-qbsp.obj -MD -MP -MF $(DEPDIR)/q2wmap-qbsp.Tpo -c -o q2wmap-qbsp.obj `if test -f 'qbsp.c'; then $(CYGPATH_W) 'qbsp.c'; else $(CYGPATH_W) '$(srcdir)/qbsp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-qbsp.Tpo $(DEPDIR)/q2wmap-qbsp.Po
#	$(AM_V_CC) \
#	source='qbsp.c' object='q2wmap-qbsp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-qbsp.obj `if test -f 'qbsp.c'; then $(CYGPATH_W) 'qbsp.c'; else $(CYGPATH_W) '$(srcdir)/qbsp.c'; fi`

q2wmap-qmat.o: qmat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-qmat.o -MD -MP -MF $(DEPDIR)/q2wmap-qmat.Tpo -c -o q2wmap-qmat.o `test -f 'qmat.c' || echo '$(srcdir)/'`qmat.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-qmat.Tpo $(DEPDIR)/q2wmap-qmat.Po
#	$(AM_V_CC) \
#	source='qmat.c' object='q2wmap-qmat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-qmat.o `test -f 'qmat.c' || echo '$(srcdir)/'`qmat.c

q2wmap-qmat.obj: qmat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-qmat.obj -MD -MP -MF $(DEPDIR)/q2wmap-qmat.Tpo -c -o q2wmap-qmat.obj `if test -f 'qmat.c'; then $(CYGPATH_W) 'qmat.c'; else $(CYGPATH_W) '$(srcdir)/qmat.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-qmat.Tpo $(DEPDIR)/q2wmap-qmat.Po
#	$(AM_V_CC) \
#	source='qmat.c' object='q2wmap-qmat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-qmat.obj `if test -f 'qmat.c'; then $(CYGPATH_W) 'qmat.c'; else $(CYGPATH_W) '$(srcdir)/qmat.c'; fi`

q2wmap-qpak.o: qpak.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-qpak.o -MD -MP -MF $(DEPDIR)/q2wmap-qpak.Tpo -c -o q2wmap-qpak.o `test -f 'qpak.c' || echo '$(srcdir)/'`qpak.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-qpak.Tpo $(DEPDIR)/q2wmap-qpak.Po
#	$(AM_V_CC) \
#	source='qpak.c' object='q2wmap-qpak.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-qpak.o `test -f 'qpak.c' || echo '$(srcdir)/'`qpak.c

q2wmap-qpak.obj: qpak.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-qpak.obj -MD -MP -MF $(DEPDIR)/q2wmap-qpak.Tpo -c -o q2wmap-qpak.obj `if test -f 'qpak.c'; then $(CYGPATH_W) 'qpak.c'; else $(CYGPATH_W) '$(srcdir)/qpak.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-qpak.Tpo $(DEPDIR)/q2wmap-qpak.Po
#	$(AM_V_CC) \
#	source='qpak.c' object='q2wmap-qpak.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-qpak.obj `if test -f 'qpak.c'; then $(CYGPATH_W) 'qpak.c'; else $(CYGPATH_W) '$(srcdir)/qpak.c'; fi`

q2wmap-qlight.o: qlight.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-qlight.o -MD -MP -MF $(DEPDIR)/q2wmap-qlight.Tpo -c -o q2wmap-qlight.o `test -f 'qlight.c' || echo '$(srcdir)/'`qlight.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-qlight.Tpo $(DEPDIR)/q2wmap-qlight.Po
#	$(AM_V_CC) \
#	source='qlight.c' object='q2wmap-qlight.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-qlight.o `test -f 'qlight.c' || echo '$(srcdir)/'`qlight.c

q2wmap-qlight.obj: qlight.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-qlight.obj -MD -MP -MF $(DEPDIR)/q2wmap-qlight.Tpo -c -o q2wmap-qlight.obj `if test -f 'qlight.c'; then $(CYGPATH_W) 'qlight.c'; else $(CYGPATH_W) '$(srcdir)/qlight.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-qlight.Tpo $(DEPDIR)/q2wmap-qlight.Po
#	$(AM_V_CC) \
#	source='qlight.c' object='q2wmap-qlight.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-qlight.obj `if test -f 'qlight.c'; then $(CYGPATH_W) 'qlight.c'; else $(CYGPATH_W) '$(srcdir)/qlight.c'; fi`

q2wmap-qvis.o: qvis.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-qvis.o -MD -MP -MF $(DEPDIR)/q2wmap-qvis.Tpo -c -o q2wmap-qvis.o `test -f 'qvis.c' || echo '$(srcdir)/'`qvis.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-qvis.Tpo $(DEPDIR)/q2wmap-qvis.Po
#	$(AM_V_CC) \
#	source='qvis.c' object='q2wmap-qvis.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-qvis.o `test -f 'qvis.c' || echo '$(srcdir)/'`qvis.c

q2wmap-qvis.obj: qvis.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-qvis.obj -MD -MP -MF $(DEPDIR)/q2wmap-qvis.Tpo -c -o q2wmap-qvis.obj `if test -f 'qvis.c'; then $(CYGPATH_W) 'qvis.c'; else $(CYGPATH_W) '$(srcdir)/qvis.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-qvis.Tpo $(DEPDIR)/q2wmap-qvis.Po
#	$(AM_V_CC) \
#	source='qvis.c' object='q2wmap-qvis.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-qvis.obj `if test -f 'qvis.c'; then $(CYGPATH_W) 'qvis.c'; else $(CYGPATH_W) '$(srcdir)/qvis.c'; fi`

q2wmap-scriplib.o: scriplib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-scriplib.o -MD -MP -MF $(DEPDIR)/q2wmap-scriplib.Tpo -c -o q2wmap-scriplib.o `test -f 'scriplib.c' || echo '$(srcdir)/'`scriplib.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-scriplib.Tpo $(DEPDIR)/q2wmap-scriplib.Po
#	$(AM_V_CC) \
#	source='scriplib.c' object='q2wmap-scriplib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-scriplib.o `test -f 'scriplib.c' || echo '$(srcdir)/'`scriplib.c

q2wmap-scriplib.obj: scriplib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-scriplib.obj -MD -MP -MF $(DEPDIR)/q2wmap-scriplib.Tpo -c -o q2wmap-scriplib.obj `if test -f 'scriplib.c'; then $(CYGPATH_W) 'scriplib.c'; else $(CYGPATH_W) '$(srcdir)/scriplib.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-scriplib.Tpo $(DEPDIR)/q2wmap-scriplib.Po
#	$(AM_V_CC) \
#	source='scriplib.c' object='q2wmap-scriplib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-scriplib.obj `if test -f 'scriplib.c'; then $(CYGPATH_W) 'scriplib.c'; else $(CYGPATH_W) '$(srcdir)/scriplib.c'; fi`

q2wmap-textures.o: textures.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-textures.o -MD -MP -MF $(DEPDIR)/q2wmap-textures.Tpo -c -o q2wmap-textures.o `test -f 'textures.c' || echo '$(srcdir)/'`textures.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-textures.Tpo $(DEPDIR)/q2wmap-textures.Po
#	$(AM_V_CC) \
#	source='textures.c' object='q2wmap-textures.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-textures.o `test -f 'textures.c' || echo '$(srcdir)/'`textures.c

q2wmap-textures.obj: textures.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-textures.obj -MD -MP -MF $(DEPDIR)/q2wmap-textures.Tpo -c -o q2wmap-textures.obj `if test -f 'textures.c'; then $(CYGPATH_W) 'textures.c'; else $(CYGPATH_W) '$(srcdir)/textures.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-textures.Tpo $(DEPDIR)/q2wmap-textures.Po
#	$(AM_V_CC) \
#	source='textures.c' object='q2wmap-textures.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-textures.obj `if test -f 'textures.c'; then $(CYGPATH_W) 'textures.c'; else $(CYGPATH_W) '$(srcdir)/textures.c'; fi`

q2wmap-threads.o: threads.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-threads.o -MD -MP -MF $(DEPDIR)/q2wmap-threads.Tpo -c -o q2wmap-threads.o `test -f 'threads.c' || echo '$(srcdir)/'`threads.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-threads.Tpo $(DEPDIR)/q2wmap-threads.Po
#	$(AM_V_CC) \
#	source='threads.c' object='q2wmap-threads.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-threads.o `test -f 'threads.c' || echo '$(srcdir)/'`threads.c

q2wmap-threads.obj: threads.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-threads.obj -MD -MP -MF $(DEPDIR)/q2wmap-threads.Tpo -c -o q2wmap-threads.obj `if test -f 'threads.c'; then $(CYGPATH_W) 'threads.c'; else $(CYGPATH_W) '$(srcdir)/threads.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-threads.Tpo $(DEPDIR)/q2wmap-threads.Po
#	$(AM_V_CC) \
#	source='threads.c' object='q2wmap-threads.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-threads.obj `if test -f 'threads.c'; then $(CYGPATH_W) 'threads.c'; else $(CYGPATH_W) '$(srcdir)/threads.c'; fi`

q2wmap-tree.o: tree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-tree.o -MD -MP -MF $(DEPDIR)/q2wmap-tree.Tpo -c -o q2wmap-tree.o `test -f 'tree.c' || echo '$(srcdir)/'`tree.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-tree.Tpo $(DEPDIR)/q2wmap-tree.Po
#	$(AM_V_CC) \
#	source='tree.c' object='q2wmap-tree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-tree.o `test -f 'tree.c' || echo '$(srcdir)/'`tree.c

q2wmap-tree.obj: tree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-tree.obj -MD -MP -MF $(DEPDIR)/q2wmap-tree.Tpo -c -o q2wmap-tree.obj `if test -f 'tree.c'; then $(CYGPATH_W) 'tree.c'; else $(CYGPATH_W) '$(srcdir)/tree.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-tree.Tpo $(DEPDIR)/q2wmap-tree.Po
#	$(AM_V_CC) \
#	source='tree.c' object='q2wmap-tree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-tree.obj `if test -f 'tree.c'; then $(CYGPATH_W) 'tree.c'; else $(CYGPATH_W) '$(srcdir)/tree.c'; fi`

q2wmap-writebsp.o: writebsp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-writebsp.o -MD -MP -MF $(DEPDIR)/q2wmap-writebsp.Tpo -c -o q2wmap-writebsp.o `test -f 'writebsp.c' || echo '$(srcdir)/'`writebsp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-writebsp.Tpo $(DEPDIR)/q2wmap-writebsp.Po
#	$(AM_V_CC) \
#	source='writebsp.c' object='q2wmap-writebsp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-writebsp.o `test -f 'writebsp.c' || echo '$(srcdir)/'`writebsp.c

q2wmap-writebsp.obj: writebsp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -MT q2wmap-writebsp.obj -MD -MP -MF $(DEPDIR)/q2wmap-writebsp.Tpo -c -o q2wmap-writebsp.obj `if test -f 'writebsp.c'; then $(CYGPATH_W) 'writebsp.c'; else $(CYGPATH_W) '$(srcdir)/writebsp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/q2wmap-writebsp.Tpo $(DEPDIR)/q2wmap-writebsp.Po
#	$(AM_V_CC) \
#	source='writebsp.c' object='q2wmap-writebsp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(q2wmap_CFLAGS) $(CFLAGS) -c -o q2wmap-writebsp.obj `if test -f 'writebsp.c'; then $(CYGPATH_W) 'writebsp.c'; else $(CYGPATH_W) '$(srcdir)/writebsp.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
